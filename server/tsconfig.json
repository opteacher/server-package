{
  // 编译选项
  "compilerOptions": {
    // 指定ECMAScript目标版本, 默认"ES3", 最新"esnext"
    "target": "es2020",
    // 指定生成哪个模块系统代码
    "module": "esnext",
    // 启用所有严格类型检查选项
    "strict": true,
    // 在 .tsx文件里支持JSX： "React"或 "Preserve"
    "jsx": "preserve",
    // 从 tslib 导入辅助工具函数
    "importHelpers": true,
    // 接受JavaScript做为输入
    "allowJs": true,
    // 是否检测JS的语法,例如下面的语法编辑器会报错
    "checkJs": false,
    // 决定如何处理模块, 默认"Classic", "Node"对于Node.js/io.js
    "moduleResolution": "node",
    // 接受Json做为输入
    "resolveJsonModule": true,
    // 启用实验性的ES装饰器
    "experimentalDecorators": true,
    // 设置默认模块导出
    "esModuleInterop": true,
    // 允许从没有设置默认导出的模块中默认导入
    "allowSyntheticDefaultImports": true,
    // 生成相应的 .map文件
    "sourceMap": false,
    // 解析非相对模块名的基准目录
    "baseUrl": ".",
    // 要包含的类型声明文件名列表
    "types": ["node", "jest"],
    // TS文件编译后会放入到此文件夹内
    "outDir": "dist",
    // 模块名到基于 baseUrl的路径映射的列表
    "paths": {
      "*": ["types/*"],
      "@/*": ["./*", "./dist/*"]
    },
    // 编译过程中需要引入的库文件的列表
    "lib": ["esnext"],
    // 打印输出的文件
    "listEmittedFiles": true,
    // 打印编译的文件（包括引用的声明文件）
    "listFiles": true,
  },
  // 包含文件
  "include": ["./**/*.js", "./**/*.ts", "./**/*.tsx", "./package.json"],
  // 排除文件
  "exclude": ["./dist", "./node_modules", "./tests", "./resources", "./lib/tests"]
}
